{"version":3,"file":"static/css/main.f788020d.css","mappings":"AAIA,EAGI,QAAS,CACT,qBAAsB,CACtB,6BAJA,QAAS,CACT,SAGgC,CACnC,KAGG,kBAAmB,CACtB,KAIG,kBAAmB,CAMnB,kBAAmB,CAPnB,YAAa,CAUb,6BANA,QAAS,CAFT,iBAAkB,CAClB,OAAQ,CAGR,sCAAgC,CAAhC,8BAI6B,CAXjC,uBASI,YAAa,CACb,qBASuB,CAnB3B,kBAmBQ,mBAHA,qBAAgB,CAFhB,SAKmB,CAnB3B,qBA0BY,cAHA,cAAe,CADf,eAAiB,CAGjB,qBAAuB,CADvB,gBAEc,CA1B1B,mBAoCQ,aAAc,CALd,iBAAkB,CAElB,cAAe,CADf,eAAmB,CAGnB,qBAAuB,CADvB,gBAAiB,CAGjB,eAAgB,CArCxB,sBA0CQ,YAAa,CACb,mCAAqC,CACrC,iCAHA,WAGkC,CA5C1C,sCA+CY,eAAiB,CAMjB,iBAAkB,CADlB,aAAc,CAGd,eALA,YAAa,CAIb,qDAAoD,CAApD,6CAAoD,CALpD,cAAe,CADf,eAAiB,CAGjB,kBAIe,CAvD3B,2DA8DgB,mBAAoB,CACpB,iBAHA,YAAa,CADb,WAAY,CAEZ,kBAAmB,CAHnB,UAKiB,CA/DjC,gEAkEoB,kBAAmB,CACnB,mBAMI,WADA,SALe,CAOlB,yBA1ErB,gEAgFwB,YADA,UACY,CACf,CClCjB,yBD/CJ,gEAuFwB,YADA,UACY,CACf,CAGL,0BA3FhB,gEA8FwB,YADA,UACY,CACf,CA/FrB,8DAoGgB,mCAAqC,CACrC,sBAAuB,CACvB,uDAAwB,CAtGxC,8DA0GgB,mCAAqC,CACrC,sBAAuB,CACvB,uDAAwB,CA5GxC,8DAgHgB,mCAAqC,CACrC,gCAAkC,CAjHlD,8DAqHgB,mCAAqC,CACrC,gCAAkC,CAtHlD,8EAyHoB,eAAkB,CAClB,UAAW,CA1H/B,8DA+HgB,mCAAqC,CACrC,gCAAkC,CAhIlD,4CAqIY,kBAAmB,CArI/B,sBA2IY,oBAAqB,CACrB,iBAAkB,CA5I9B,sCAgJgB,YADA,UACY,CACf,yBAjJb,sBAuJY,oBAAqB,CACrB,iBAAkB,CAxJ9B,sCA4JgB,YADA,UACY,CACf,CC9GT,yBD/CJ,sBAmKY,oBAAqB,CACrB,iBAAkB,CApK9B,sCAwKgB,YADA,UACY,CACf,CAIT,0BA7KJ,sBA+KY,oBAAqB,CACrB,iBAAkB,CAhL9B,sCAoLgB,YADA,UACY,CAChB,CArLZ,gBA6LQ,mBAHA,YAAa,CACb,kBAAmB,CACnB,4BACmB,CA7L3B,mBAiMQ,aAAc,CACd,eAAgB,CAlMxB,+BAwMQ,mBAFA,YAAa,CACb,sBAgBe,CAvNvB,mBA8MQ,kBAAmB,CACnB,iBAAkB,CAGlB,UAAc,CAKd,eADA,eAAiB,CALjB,WAAY,CAJZ,WAAW,CAGX,WAOe,CAvNvB,yBA2NQ,YAAa,CA3NrB,0BA+NQ,iDAAsD","sources":["style.scss","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss"],"sourcesContent":["@import \"../node_modules/bootstrap/scss/functions\";\r\n@import \"../node_modules/bootstrap/scss/variables\";\r\n@import \"../node_modules/bootstrap/scss/mixins\";\r\n\r\n*{\r\n    margin: 0;\r\n    padding: 0;\r\n    border: 0;\r\n    box-sizing: border-box;\r\n    font-family: 'Karla', sans-serif;\r\n}\r\n\r\nbody{\r\n    background: #0B2434;\r\n}\r\n\r\nmain{\r\n    height: 500px;\r\n    background: #F5F5F5;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    -ms-transform: translate(-50%, -50%);\r\n    transform: translate(-50%, -50%);\r\n    border-radius: 10px; \r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-around;\r\n\r\n    .information{\r\n        width: 80%;\r\n        margin: auto;\r\n        margin-top: 50px;\r\n        display: flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n\r\n        h1{\r\n            font-weight: bold;\r\n            font-size: 36px;\r\n            line-height: 30px;\r\n            letter-spacing: -0.03em;\r\n            color: #212529;\r\n        }\r\n    }\r\n    \r\n    .instructions{\r\n        font-family: Inter;\r\n        font-weight: normal;\r\n        font-size: 17px;\r\n        line-height: 16px;\r\n        letter-spacing: -0.03em;\r\n        color: #4A4E74;\r\n        padding-top: 7px;\r\n    }\r\n\r\n    .dies--container{\r\n        margin: auto;\r\n        display: grid;\r\n        grid-template-columns: repeat(5, 1fr);\r\n        grid-template-rows: repeat(2, 1fr);\r\n\r\n        .die--component{\r\n            background: white;\r\n            font-weight: bold;\r\n            font-size: 21px;\r\n            display: grid;\r\n            place-items: center;\r\n            color: #2B283A;\r\n            border-radius: 8px;\r\n            filter: drop-shadow(0px 4px 4px rgba(0, 0, 0, 0.25));\r\n            cursor: pointer; \r\n\r\n            .limiting--container{\r\n                width: 100%;\r\n                height: 100%;\r\n                display: grid;\r\n                place-items: center;\r\n                grid-column-gap: 5px;\r\n                grid-row-gap: 5px;\r\n\r\n                .dot{\r\n                    background: #0B2434;\r\n                    border-radius: 100%;\r\n                }\r\n\r\n                @include media-breakpoint-up(xs){\r\n                    .dot{\r\n                        width: 9px;\r\n                        height: 9px;\r\n                    }\r\n                }\r\n\r\n                @include media-breakpoint-up(sm){\r\n                    .dot{\r\n                        width: 12px;\r\n                        height: 12px;\r\n                    }\r\n                }\r\n\r\n                @include media-breakpoint-up(lg){\r\n                    .dot{\r\n                        width: 13px;\r\n                        height: 13px;\r\n                    }\r\n                }\r\n\r\n                @media (min-width: 1201px){\r\n                    .dot{\r\n                        width: 15px;\r\n                        height: 15px;\r\n                    }\r\n                }\r\n            }\r\n\r\n            .limiting--container--2{\r\n                grid-template-columns: repeat(2, 1fr);\r\n                grid-template-rows: 1fr;\r\n                transform: rotate(45deg);\r\n            }\r\n\r\n            .limiting--container--3{\r\n                grid-template-columns: repeat(3, 1fr);\r\n                grid-template-rows: 1fr;\r\n                transform: rotate(45deg);\r\n            }\r\n\r\n            .limiting--container--4{\r\n                grid-template-columns: repeat(2, 1fr);\r\n                grid-template-rows: repeat(2, 1fr);\r\n            }\r\n\r\n            .limiting--container--5{\r\n                grid-template-columns: repeat(2, 1fr);\r\n                grid-template-rows: repeat(3, 1fr);\r\n\r\n                .dot:last-child{\r\n                    grid-column: 1 / 3;\r\n                    grid-row: 2;\r\n                }\r\n            }\r\n\r\n            .limiting--container--6{\r\n                grid-template-columns: repeat(2, 1fr);\r\n                grid-template-rows: repeat(3, 1fr);\r\n            }\r\n        }   \r\n        \r\n        .die--component--held{\r\n            background: #59E391;\r\n        }\r\n    }\r\n\r\n    @include media-breakpoint-up(xs){ \r\n        .dies--container{\r\n            grid-column-gap: 10px;\r\n            grid-row-gap: 10px;\r\n\r\n            .die--component{\r\n                width: 48px;\r\n                height: 48px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @include media-breakpoint-up(sm){\r\n        .dies--container{\r\n            grid-column-gap: 20px;\r\n            grid-row-gap: 20px;\r\n\r\n            .die--component{\r\n                width: 65px;\r\n                height: 65px;\r\n            }\r\n        }\r\n    }\r\n\r\n    @include media-breakpoint-up(lg){   \r\n        .dies--container{\r\n            grid-column-gap: 25px;\r\n            grid-row-gap: 25px;\r\n\r\n            .die--component{\r\n                width: 70px;\r\n                height: 70px;\r\n            }\r\n        }\r\n    }\r\n    \r\n    @media(min-width: 1201px){\r\n        .dies--container{\r\n            grid-column-gap: 25px;\r\n            grid-row-gap: 25px;\r\n\r\n            .die--component{\r\n                width: 85px;\r\n                height: 85px;\r\n           }\r\n        }\r\n    }\r\n\r\n    .add--info{\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-evenly;\r\n        align-items: center;\r\n    }\r\n\r\n    .add--info h1{\r\n        color: #212529;\r\n        font-weight: 400;\r\n    }\r\n\r\n    .timer{\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n\r\n    .roll--button{\r\n        margin:auto;\r\n        background: #5035FF;\r\n        border-radius: 4px;\r\n        width: 150px;\r\n        height: 45px;\r\n        color: #FFFFFF;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        font-weight: bold;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .roll--button:focus{\r\n        outline: none;\r\n    }\r\n\r\n    .roll--button:active{\r\n        box-shadow: inset 5px 5px 10px -3px rgba(0, 0, 0, 0.7);\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n"],"names":[],"sourceRoot":""}